workload: Transaction
operation: read
number: 2
title: example
description: |
  Given a *Person*, find an *Account* owned by the *Person* which has funds
  transferred from other *Accounts* by at most 3 steps which connected to *loan*
  via *deposit* relationship in a specific time range between start_time and
  end_time. Note that the transfer path of edge2(at most 3 steps transfer
  relationship) are in ascending order in terms of timestamp. Return the sum and
  count of loans fund amount.
parameters:
  - name: id
    type: ID
    description: id of the start Person
  - name: start_time
    type: DateTime
    description: begin of the time window
  - name: end_time
    type: DateTime
    description: end of the time window
result:
  - name: SUM(loans.loanAmount)
    type: 64-bit Integer
    description: sum of all loans
  - name: COUNT(DISTINCT loans)
    type: 64-bit Integer
    description: number of different loans
sort:
  - name: todo
    direction: asc
limit: todo
choke_points: [0.0]
relevance: |
  This query is typical gang analysis case in risk control.
