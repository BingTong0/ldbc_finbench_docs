workload: Transaction
operation: complex-read
number: 2
title: Fund gathered from the accounts applying loans
description: |
  Given a *Person* and a specified time window between *start_time* and
  *end_time*, find an *Account* *owned* by the *Person* which has fund
  *transferred* from other *Accounts* by at most 3 steps(*edge2*) which has fund
  *deposited* from a *loan*. The timestamps of in transfer trace(*edge2*) are in
  ascending order from the upstream to downstream. Return the sum of *loan*
  amount, the sum of *loan* balance and the count of distinct *loans*.
parameters:
  - name: id
    type: ID
    description: id of the start Person
  - name: startTime
    type: DateTime
    description: begin of the time window
  - name: endTime
    type: DateTime
    description: end of the time window
  - name: truncationLimit
    type: 32-bit Integer
    description: maximum edges traversed at each step
  - name: truncationOrder
    type: enum
    description: the sort order before truncation at each step
result:
  - name: sumLoanAmount
    type: 64-bit Integer
    description: sum of all loans' amount. SUM(loans.loanAmount)
    category: aggregated
  - name: sumLoanBalance
    type: 64-bit Integer
    description: sum of all loans' balance
    category: aggregated
  - name: numLoans
    type: 64-bit Integer
    description: number of different loans
    category: aggregated
choke_points: [3.2, 3.4, 6.2, 7.1, 7.4, 8.7, 8.8]
relevance: |
  This query is typical gang analysis case in risk control.
