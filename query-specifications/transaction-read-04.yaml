workload: Transaction
operation: read
number: 4
title: "Anti-Money Laundering: Three Accounts in a cycle"
description: |
  Given two *Accounts*, find the sum and max of *transfer* of them via a
  third-party *Account* in a specific time range between start_time and end_time.
  Note that the *transfer* of edge1, edge2, edge3 are in ascending order in
  terms of timestamp. Return the sum and max of amount of *edge1*, *edge2*, *edge3*
  and the count of distinct of third-party account.
parameters:
  - name: id1
    type: ID
    description: id of the src Account
  - name: id2
    type: ID
    description: id of the dst Account
  - name: start_time
    type: DateTime
    description: begin of the time window
  - name: end_time
    type: DateTime
    description: end of the time window
result:
  - name: SUM(edge1.loanAmount)
    type: 64-bit Integer
    description: sum of transfers from srcAccount to dstAccount
  - name: MAX(edge1.loanAmount)
    type: 64-bit Integer
    description: max of transfers from srcAccount to dstAccount
  - name: SUM(edge2.loanAmount)
    type: 64-bit Integer
    description: sum of transfers from dstAccount to otherAccount
  - name: MAX(edge2.loanAmount)
    type: 64-bit Integer
    description: max of transfers from dstAccount to otherAccount
  - name: SUM(edge3.loanAmount)
    type: 64-bit Integer
    description: sum of transfers from otherAccount to srcAccount
  - name: MAX(edge3.loanAmount)
    type: 64-bit Integer
    description: max of transfers from otherAccount to srcAccount
sort:
  - name: todo
    direction: asc
limit: todo
choke_points: [0.0]
relevance: |
  This query is a typical fund transfer cycle analysis case in AWL.
